service: serverless-activity
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x

  stage: dev
  region: ap-southeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        Fn::GetAtt: [ SQSQueue, Arn ]
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        Fn::GetAtt: [ SQSDemoBucket, Arn ]
    - Effect: Allow
      Action:
        - s3:Get*
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - lambda:*
      Resource:
        - "*"

  environment:
    SQS_QUEUE_URL: { Ref: SQSQueue }
    S3_BUCKET_NAME: { Ref: SQSDemoBucket }
    DOWNSTREAM_LAMBDA_FUNCTION_NAME: ${self:service}-${self:provider.stage}-downstream
    
functions:
  sender:
    handler: handler.sender.process
    events:
      - httpApi:
          method: '*'
          path: /send
  receiver:
    handler: handler.receiver.process
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
  downstream:
    handler: handler.downstream.process
    events: []

package:
 individually: true
 patterns:
   - '!.test'
   - '!.docs'
   - '!.README.md'

resources:
 Resources:
   SQSDemoBucket:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: sqs-bucket-${opt:stage, self:provider.stage}-dump-files
   SQSQueue:
     Type: AWS::SQS::Queue
     Properties:
       QueueName: sqs-queue-${opt:stage, self:provider.stage}.fifo
       FifoQueue: true